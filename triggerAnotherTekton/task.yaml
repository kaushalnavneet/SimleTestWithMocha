apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: trigger-another
spec:
  inputs:
    params:
      - name: another-pipeline-id
        description: the pipeline Id of another tekton pipeline to trigger
      - name: manual-trigger
        description: manual trigger name of another tekton pipeline
      - name: repository
        description: the git repository url that we interested in
  stepTemplate:
    env:
      - name: API
        valueFrom:
          configMapKeyRef:
            name: cd-config
            key: API
      - name: REGION
        valueFrom:
          configMapKeyRef:
            name: cd-config
            key: REGION
      - name: BUILD_NUMBER
        valueFrom:
          configMapKeyRef:
            name: toolchain
            key: buildNumber
      - name: TOOLCHAIN
        valueFrom:
          configMapKeyRef:
            name: toolchain
            key: toolchain
      - name: API_KEY
        valueFrom:
          secretKeyRef:
            name: cd-secret
            key: API_KEY
      - name: MYTOOLCHAIN
        valueFrom:
          configMapKeyRef:
            name: cd-config
            key: MYTOOLCHAIN
  steps:
    - name: play-with-toolchain-object
      image: ibmcom/pipeline-base-image
      env:
        - name: REPOSITORY
          value: $(inputs.params.repository)
      command: ["/bin/sh", "-c"]
      args:
        - |
          echo $TOOLCHAIN
          echo "for TOOLCHAIN"
          echo $TOOLCHAIN | jq -r --arg git_repo "$REPOSITORY" '.services[] | select (.parameters.repo_url==$git_repo) | .parameters.token_url'
          echo "for MYTOOLCHAIN"
          echo $MYTOOLCHAIN | jq -r --arg git_repo "$REPOSITORY" '.services[] | select (.parameters.repo_url==$git_repo) | .parameters.token_url'
          GIT_TOKEN_URL=$(echo $MYTOOLCHAIN | jq -r --arg git_repo "$REPOSITORY" '.services[] | select (.parameters.repo_url==$git_repo) | .parameters.token_url')
          echo "GIT_TOKEN_URL is $GIT_TOKEN_URL"
    - name: trigger-another-tekton-pipeline
      image: ibmcom/pipeline-base-image
      env:
        - name: ANOTHER_PIPELINE_ID
          value: $(inputs.params.another-pipeline-id)
        - name: MANUAL_TRIGGER_NAME
          value: $(inputs.params.manual-trigger)
        - name: REPOSITORY
          value: $(inputs.params.repository)
      command: ["/bin/sh", "-c"]
      args:
        - |
          echo "Build Number if available is $BUILD_NUMBER"
          ibmcloud login -a $API -r $REGION --apikey $API_KEY ;
          TOKEN=$(ibmcloud iam oauth-tokens --output JSON | jq -r .iam_token)
          curl -s -X GET -o _toolchain.json -H "Accept: application/json" -H "Authorization: Bearer eyJraWQiOiIyMDE5MDcyNCIsImFsZyI6IlJTMjU2In0.eyJpYW1faWQiOiJJQk1pZC0zMTAwMDFTTjE5IiwiaWQiOiJJQk1pZC0zMTAwMDFTTjE5IiwicmVhbG1pZCI6IklCTWlkIiwiaWRlbnRpZmllciI6IjMxMDAwMVNOMTkiLCJnaXZlbl9uYW1lIjoiWElOIFlJIiwiZmFtaWx5X25hbWUiOiJKSUFORyIsIm5hbWUiOiJYSU4gWUkgSklBTkciLCJlbWFpbCI6InhpbnlpakBjYS5pYm0uY29tIiwic3ViIjoieGlueWlqQGNhLmlibS5jb20iLCJhY2NvdW50Ijp7InZhbGlkIjp0cnVlLCJic3MiOiJhMmYyOGU1MmU5MGE1MDdmNTBiNjhjNDdhMzRlYzU5YyJ9LCJpYXQiOjE1Nzk3Mjc2MTksImV4cCI6MTU3OTczMTIxOSwiaXNzIjoiaHR0cHM6Ly9pYW0uYmx1ZW1peC5uZXQvaWRlbnRpdHkiLCJncmFudF90eXBlIjoidXJuOmlibTpwYXJhbXM6b2F1dGg6Z3JhbnQtdHlwZTphcGlrZXkiLCJzY29wZSI6ImlibSBvcGVuaWQiLCJjbGllbnRfaWQiOiJkZWZhdWx0IiwiYWNyIjoxLCJhbXIiOlsicHdkIl19.tYXKSrfX2YA76iOW4ubD5f59ZqwZxykTtGFA6ZoPuWhu4fuL1huwz0M5Dj-widFCGz_GaPoW7ANZpR-ugkgLWUApCwX9J-0jYBvbp-m8N3jXN76GJ15ZA82YX0YlUbHLyGZ8L9tdnn08HGIqD-ibSpwsg4la8HQWX0kYjSU97eTspL1nSnzExTKg0DthlXs_7m5QfrgG1nGsjKvGbmd4A4mDA_p_OgyPPS4v95tYqXdckOn80PABZv2ueH-W2U1K6PZ-Xd9lqSo7xgEXCv8QUys6LgHROYkD8e56HdbODQkmCrjAMc_OAo12r7nuQLDgetFLFT5U-t7zOcViI1VTLg" "https://devops-api.us-south.devops.dev.cloud.ibm.com/v1/toolchains/d7d315d7-38f2-4301-ac51-ec188e5b6475?include=services"
          cat _toolchain.json
          cat _toolchain.json | jq -r --arg git_repo "$REPOSITORY" '.services[] | select (.parameters.repo_url==$git_repo) | .parameters.token_url'
          curl -X POST \
            "https://devops-api.${REGION}.devops.cloud.ibm.com/v1/tekton_pipelines/${ANOTHER_PIPELINE_ID}/runs"\
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -H "Authorization: ${TOKEN}" \
            -d "{\"eventListener\":\"${MANUAL_TRIGGER_NAME}\"}"